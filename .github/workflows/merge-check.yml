name: Merge Check

on:
  workflow_run:
    workflows: ["Java CI"]
    types:
      - completed

permissions:
  contents: write
  pull-requests: write
  checks: write
  statuses: write

jobs:
  check-and-merge:
    runs-on: ubuntu-latest
    steps:
      - name: Check Java CI Status
        id: check_status
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: checks } = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.payload.pull_request ? context.payload.pull_request.head.sha : context.payload.workflow_run.head_commit.id
            });
            
            const javaCICheck = checks.check_runs.find(check => check.name === 'build');
            
            if (!javaCICheck) {
              core.setFailed('Java CI build check not found');
              return;
            }
            
            if (javaCICheck.conclusion !== 'success') {
              core.setFailed('Java CI build must pass before merging');
              return;
            }
            
            console.log('Java CI build passed ‚úì');

      - name: Check if PR is approved
        id: check_pr
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            
            const approved = reviews.some(review => review.state === 'APPROVED');
            
            if (!approved) {
              core.setFailed('Pull request needs to be approved first');
              return;
            }
            
            console.log('PR is approved ‚úì');

      - name: Update PR status
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const buildPassed = '${{ steps.check_status.conclusion }}' === 'success';
            const isApproved = '${{ steps.check_pr.conclusion }}' === 'success';
            
            const status = buildPassed && isApproved ? 
              '‚úÖ All checks passed successfully!' : 
              '‚ùå Not all requirements are met. Check Java CI build status and approvals.';
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: status
            });

      - name: Auto-merge if everything passes
        if: ${{ steps.check_status.conclusion == 'success' && steps.check_pr.conclusion == 'success' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                merge_method: 'squash'
              });
              console.log('PR merged successfully! üéâ');
            } catch (error) {
              core.setFailed(`Failed to merge PR: ${error.message}`);
            }
