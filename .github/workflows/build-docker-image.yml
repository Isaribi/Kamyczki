name: Create and publish Docker images

on:
  push:
    branches:
      - daniel/fix

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  PLATFORMS: gateway,auth,registry

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [gateway, auth, registry, stone-read, stone-write]
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Read and increment version
        id: version
        run: |
          if [ -f version.txt ]; then
            VERSION=$(cat version.txt)
          else
            VERSION=0
          fi
          NEW_VERSION=$((VERSION + 1))
          echo "$NEW_VERSION" > version.txt
          echo "VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Commit new version
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add version.txt
          git commit -m "Bump version to v${{ env.VERSION }}"
          git push

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=v${{ env.VERSION }}
            type=raw,value=latest

      - name: Build and push Docker image for ${{ matrix.platform }}
        id: push_image
        uses: docker/build-push-action@v4
        with:
          context: ./server
          file: ./server/microservices/${{ matrix.platform }}/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_NAME }}:${{ matrix.platform }}-v${{ env.VERSION }}
            ghcr.io/${{ env.IMAGE_NAME }}:${{ matrix.platform }}-latest
          labels: ${{ steps.meta.outputs.labels }}
