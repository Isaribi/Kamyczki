name: Create and publish Docker images

on:
  push:
    branches:
      - daniel/compose-fix
    paths:
      - 'server/microservices/**'
      - 'server/libraries/**'

permissions:
  contents: read
  packages: write
  id-token: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      shared_changed: ${{ steps.filter.outputs.shared }}
      changed_services: ${{ steps.filter.outputs.changed_services }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          base: 'daniel/compose-fix'
          filters: |
            changed_services:
              gateway: 'server/microservices/gateway/**'
              auth: 'server/microservices/auth/auth-service/**'
              registry: 'server/microservices/registry/**'
              stone_read: 'server/microservices/stone-read/**'
              stone_write: 'server/microservices/stone-write/**'
            shared:
              - 'server/libraries/**'
              - 'server/microservices/auth/auth-feign/**'

      - name: Set modified services variable
        run: |
          MODIFIED_SERVICES=""
          
          if [[ "${{ steps.filter.outputs.shared }}" == "true" ]]; then
            echo "Libraries changed, rebuilding all services."
            MODIFIED_SERVICES="gateway,auth,registry,stone-read,stone-write"
          else
            for service in gateway auth registry stone_read stone_write; do
              if [[ "${{ steps.filter.outputs.changed_services.${service} }}" == "true" ]]; then
                MODIFIED_SERVICES="${MODIFIED_SERVICES},${service}"
              fi
            done
          fi
          
          MODIFIED_SERVICES=${MODIFIED_SERVICES#,}

          echo "MODIFIED_SERVICES=${MODIFIED_SERVICES}" >> $GITHUB_ENV

  build-and-push:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.changed_services != '' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: ${{ fromJson(needs.detect-changes.outputs.MODIFIED_SERVICES) }}

    steps:
      - uses: actions/checkout@v4

      - name: Log in to Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.platform }}
          tags: |
            type=raw,value=latest
            type=sha,prefix=
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.description=Package for ${{ matrix.platform }}
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.version=${{ github.sha }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./server
          file: ./server/microservices/${{ matrix.platform }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.platform }}:latest
          cache-to: type=inline
          provenance: false
