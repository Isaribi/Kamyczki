name: Create and publish Docker images
on:
  push:
    branches:
      - daniel/compose-fix
    paths:
      - 'server/**'

permissions:
  contents: read
  packages: write
  id-token: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      gateway_changed: ${{ steps.filter.outputs.gateway }}
      auth_changed: ${{ steps.filter.outputs.auth }}
      registry_changed: ${{ steps.filter.outputs.registry }}
      stone_read_changed: ${{ steps.filter.outputs.stone_read }}
      stone_write_changed: ${{ steps.filter.outputs.stone_write }}
      shared_changed: ${{ steps.filter.outputs.shared }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            gateway:
              - 'server/microservices/gateway/**'
            auth:
              - 'server/microservices/auth/auth-service/**'
            registry:
              - 'server/microservices/registry/**'
            stone_read:
              - 'server/microservices/stone-read/**'
            stone_write:
              - 'server/microservices/stone-write/**'
            shared: 
              - 'server/libraries/**'
              - 'server/microservices/auth/auth-feign/**'
              
  build-and-push:
    needs: detect-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - name: gateway
            path: gateway
          - name: auth
            path: auth/auth-service
          - name: registry
            path: registry
          - name: stone-read
            path: stone-read
          - name: stone-write
            path: stone-write
    
    if: |
      (matrix.service.name == 'gateway' && needs.detect-changes.outputs.gateway_changed == 'true') ||
      (matrix.service.name == 'auth' && needs.detect-changes.outputs.auth_changed == 'true') ||
      (matrix.service.name == 'registry' && needs.detect-changes.outputs.registry_changed == 'true') ||
      (matrix.service.name == 'stone-read' && needs.detect-changes.outputs.stone_read_changed == 'true') ||
      (matrix.service.name == 'stone-write' && needs.detect-changes.outputs.stone_write_changed == 'true') ||
      needs.detect-changes.outputs.shared_changed == 'true'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Log in to Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.service.name }}
          tags: |
            type=raw,value=latest
            type=sha,prefix=
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.description=Package for ${{ matrix.service.name }}
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.version=${{ github.sha }}
            org.opencontainers.image.revision=${{ github.sha }}
            
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./server
          file: ./microservices/${{ matrix.service.path }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.service.name }}:latest
          cache-to: type=inline
          provenance: false
          