name: Create and publish Docker images

on:
  push:
    branches:
      - daniel/compose-fix

permissions:
  contents: read
  packages: write
  id-token: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  
jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      shared_changed: ${{ steps.changes.outputs.shared_changed }}
      services_changed: ${{ steps.changes.outputs.matrix }}
      changes_detected: ${{ steps.changes.outputs.changes_detected }}
   
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check for changes in services or shared libraries
        id: changes
        run: |
          SHARED_CHANGED=$(git diff --name-only HEAD^ HEAD | grep -E "server/libraries/|server/microservices/.+/.*-feign/" || echo "none")
          if [[ "$SHARED_CHANGED" != "none" ]]; then
            echo "shared_changed=true" >> $GITHUB_OUTPUT
          else
            echo "shared_changed=false" >> $GITHUB_OUTPUT
          fi
          
          SERVICES=$(git diff --name-only HEAD^ HEAD | grep "server/microservices/" | cut -d'/' -f3 | sort -u | jq -R -s -c 'split("\n")[:-1]')
          echo "matrix=$SERVICES" >> $GITHUB_OUTPUT
          
          if [[ -n "$SHARED_CHANGED" || -n "$SERVICES" ]]; then
            echo "changes_detected=true" >> $GITHUB_OUTPUT
          else
            echo "changes_detected=false" >> $GITHUB_OUTPUT

  build-and-push:
    needs: check-changes
    if: ${{ needs.check-changes.outputs.changes_detected == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    strategy:
      matrix:
        platform: ${{ fromJSON(needs.check-changes.outputs.shared_changed == 'true' && '["gateway", "auth", "registry", "stone-read", "stone-write"]' || needs.check-changes.outputs.services_changed) }}
      
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.platform }}
          tags: |
            type=raw,value=latest
            type=sha,prefix=
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.description=Package for ${{ matrix.platform }}
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.version=${{ github.sha }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./server
          file: ./server/microservices/${{ matrix.platform }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.platform }}:latest
          cache-to: type=inline
          provenance: false

  no-changes:
    if: ${{ needs.check-changes.outputs.changes_detected == 'false' }}
    runs-on: ubuntu-latest
    steps:
      - name: No changes detected
        run: echo "No changes detected in the services or libraries. Workflow will not proceed."
