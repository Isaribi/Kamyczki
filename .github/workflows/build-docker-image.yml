name: Create and publish Docker images

on:
  push:
    branches:
      - daniel/compose-fix

permissions:
  contents: read
  packages: write
  id-token: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  check-and-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    
    strategy:
      matrix:
        platform: [gateway, auth, registry, stone-read, stone-write]
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check if service files changed
        id: check_changes
        run: |
          CHANGED=$(git diff --name-only HEAD^ HEAD | grep "server/microservices/${{ matrix.platform }}" || true)
          echo "changed=${CHANGED:+true}" >> $GITHUB_OUTPUT
          
      - name: Log in to Registry
        if: steps.check_changes.outputs.changed == 'true'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        if: steps.check_changes.outputs.changed == 'true'
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata
        if: steps.check_changes.outputs.changed == 'true'
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.platform }}
          tags: |
            type=raw,value=latest
            type=sha,prefix=
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.description=Package for ${{ matrix.platform }}
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.version=${{ github.sha }}
            org.opencontainers.image.created=${{ steps.meta.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build and push Docker image for ${{ matrix.platform }}
        if: steps.check_changes.outputs.changed == 'true'
        uses: docker/build-push-action@v4
        with:
          context: ./server
          file: ./server/microservices/${{ matrix.platform }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.platform }}:latest
          cache-to: type=inline
          provenance: false