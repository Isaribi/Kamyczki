name: Java code tests

on:
  push:
    branches: daniel/images_fix
  pull_request:
    branches: main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      MICROSERVICES_PATH: ./server/microservices
      LIBRARIES_PATH: ./server/libraries
      LOGS_PATH: ${{ github.workspace }}/logs

    strategy:
      matrix:
        include:
          - service: auth-service
            path: auth/auth-service
          - service: registry
            path: registry
          - service: gateway
            path: gateway
          - service: stone-read
            path: stone-read
          - service: stone-write
            path: stone-write

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Create logs directory
      run: mkdir -p ${{ env.LOGS_PATH }}

    - name: Build libraries
      run: |
        mvn clean install --no-transfer-progress > ${{ env.LOGS_PATH }}/commons-build.log 2>&1 || (echo "Build failed" >> ${{ env.LOGS_PATH }}/commons-build.log && cat ${{ env.LOGS_PATH }}/commons-build.log)
      working-directory: ${{ env.LIBRARIES_PATH }}/commons
      continue-on-error: true

    - name: Build auth-feign-client
      run: |
        mvn clean install --no-transfer-progress > ${{ env.LOGS_PATH }}/auth-feign-client-build.log 2>&1 || (echo "Build failed" >> ${{ env.LOGS_PATH }}/auth-feign-client-build.log && cat ${{ env.LOGS_PATH }}/auth-feign-client-build.log)
      working-directory: ${{ env.MICROSERVICES_PATH }}/auth/auth-feign
      continue-on-error: true

    - name: Build with Maven
      run: |
        mvn clean install --no-transfer-progress > ${{ env.LOGS_PATH }}/${{ matrix.service }}-build.log 2>&1 || (echo "Build failed" >> ${{ env.LOGS_PATH }}/${{ matrix.service }}-build.log && cat ${{ env.LOGS_PATH }}/${{ matrix.service }}-build.log)
      working-directory: ${{ env.MICROSERVICES_PATH }}/${{ matrix.path }}
      continue-on-error: true

    - name: Run SpotBugs
      run: |
        mvn com.github.spotbugs:spotbugs-maven-plugin:4.7.0.0:check > ${{ env.LOGS_PATH }}/${{ matrix.service }}-spotbugs.log 2>&1 || (echo "SpotBugs check failed" >> ${{ env.LOGS_PATH }}/${{ matrix.service }}-spotbugs.log && cat ${{ env.LOGS_PATH }}/${{ matrix.service }}-spotbugs.log)
      working-directory: ${{ env.MICROSERVICES_PATH }}/${{ matrix.path }}
      continue-on-error: true

    - name: Run Checkstyle
      run: |
        mvn checkstyle:check > ${{ env.LOGS_PATH }}/${{ matrix.service }}-checkstyle.log 2>&1 || (echo "Checkstyle check failed" >> ${{ env.LOGS_PATH }}/${{ matrix.service }}-checkstyle.log && cat ${{ env.LOGS_PATH }}/${{ matrix.service }}-checkstyle.log)
      working-directory: ${{ env.MICROSERVICES_PATH }}/${{ matrix.path }}
      continue-on-error: true

    - name: Run PMD
      run: |
        mvn pmd:check > ${{ env.LOGS_PATH }}/${{ matrix.service }}-pmd.log 2>&1 || (echo "PMD check failed" >> ${{ env.LOGS_PATH }}/${{ matrix.service }}-pmd.log && cat ${{ env.LOGS_PATH }}/${{ matrix.service }}-pmd.log)
      working-directory: ${{ env.MICROSERVICES_PATH }}/${{ matrix.path }}
      continue-on-error: true

    - name: Upload logs as artifacts
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: build-logs-${{ matrix.service }}
        path: ${{ env.LOGS_PATH }}/*