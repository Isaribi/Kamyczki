name: Java code tests

on:
  schedule:
    - cron: '0 22 * * 0'
  push:
    - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      MICROSERVICES_PATH: ./server/microservices
      LIBRARIES_PATH: ./server/libraries
      LOGS_PATH: ${{ github.workspace }}/logs

    strategy:
      matrix:
        include:
          - service: auth-service
            path: auth/auth-service
          - service: registry
            path: registry
          - service: gateway
            path: gateway
          - service: stone-read
            path: stone-read
          - service: stone-write
            path: stone-write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Create logs directory
      run: mkdir -p ${{ env.LOGS_PATH }}

    - name: Build libraries
      run: |
        mvn clean install --no-transfer-progress
      working-directory: ${{ env.LIBRARIES_PATH }}/commons
      continue-on-error: true

    - name: Build auth-feign-client
      run: |
        mvn clean install --no-transfer-progress
      working-directory: ${{ env.MICROSERVICES_PATH }}/auth/auth-feign
      continue-on-error: true

    - name: Build with Maven
      run: |
        mvn clean install --no-transfer-progress
      working-directory: ${{ env.MICROSERVICES_PATH }}/${{ matrix.path }}
      continue-on-error: true


    - name: Run Spotless Check
      run: |
        mvn spotless:check > ${{ env.LOGS_PATH }}/${{ matrix.service }}-spotless.log 2>&1 || (echo "Spotless check failed" >> ${{ env.LOGS_PATH }}/${{ matrix.service }}-spotless.log && cat ${{ env.LOGS_PATH }}/${{ matrix.service }}-spotless.log)
      working-directory: ${{ env.MICROSERVICES_PATH }}/${{ matrix.path }}
      continue-on-error: true

    - name: Run PMD Check
      run: |
        mvn pmd:check > ${{ env.LOGS_PATH }}/${{ matrix.service }}-pmd.log 2>&1 || (echo "PMD check failed" >> ${{ env.LOGS_PATH }}/${{ matrix.service }}-pmd.log && cat ${{ env.LOGS_PATH }}/${{ matrix.service }}-pmd.log)
      working-directory: ${{ env.MICROSERVICES_PATH }}/${{ matrix.path }}
      continue-on-error: true

    - name: Upload individual logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: temp-logs-${{ matrix.service }}
        path: ${{ env.LOGS_PATH }}/*
        retention-days: 1

  combine-logs:
    needs: build
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Download all workflow run artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: temp-logs-*
        merge-multiple: true
        path: all-logs

    - name: Upload combined logs
      uses: actions/upload-artifact@v4
      with:
        name: all-service-logs
        path: all-logs